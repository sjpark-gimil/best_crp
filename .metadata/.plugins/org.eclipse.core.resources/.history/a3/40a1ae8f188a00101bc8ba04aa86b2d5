/* ==== main.c : UART2 heartbeat (PING once/sec) ==== */
#include "main.h"
#include "gpio.h"
#include "usart.h"
#include <string.h>
#include <stdio.h>
#include <stdint.h>

/* Provided by CubeMX in usart.c */
extern UART_HandleTypeDef huart2;

/* Prototypes (defined below) */
void SystemClock_Config(void);
void Error_Handler(void);

static void tx(const char *s) {
  (void)HAL_UART_Transmit(&huart2, (uint8_t*)s, (uint16_t)strlen(s), 200);
}

int main(void)
{
  HAL_Init();
  SystemClock_Config();      /* defined in this file */
  MX_GPIO_Init();
  MX_USART2_UART_Init();     /* set baud to match the module (try 9600 first) */

  uint32_t n = 0;
  for (;;)
  {
    char line[32];
    snprintf(line, sizeof line, "PING %lu\r\n", (unsigned long)++n);
    tx(line);
    HAL_Delay(1000);
  }
}

/* --------- Minimal MSI clock (~2.1 MHz) ---------- */
void SystemClock_Config(void)
{
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};

  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);

  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
  RCC_OscInitStruct.MSICalibrationValue = 0;
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;     /* ~2.097 MHz */
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK) {
    Error_Handler();
  }

  RCC_ClkInitStruct.ClockType =
      RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK |
      RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource   = RCC_SYSCLKSOURCE_MSI;
  RCC_ClkInitStruct.AHBCLKDivider  = RCC_SYSCLK_DIV1;
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK) {
    Error_Handler();
  }
}

/* --------- Simple error handler ---------- */
void Error_Handler(void)
{
  __disable_irq();
  while (1) { }
}
